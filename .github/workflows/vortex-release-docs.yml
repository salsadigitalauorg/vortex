# This action is used for Vortex maintenance. It will not be used in the scaffolded project.
name: Vortex - Release docs

on:
  push:
    tags:
      - '*'
    branches:
      - '**release-docs**'
      - '**release-installer**'
      - 'develop'  # Add main branch for easier testing

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:

  vortex-release-installer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install dependencies
        run: composer install
        working-directory: .vortex/installer

      - name: Add version
        run: |
          TAG=${{ github.ref_type == 'tag' && github.ref_name || '' }}
          SHA=${{ github.ref_type == 'branch' && github.sha || '' }}
          sed -i "s/\"git-tag-ci\": \"dev\"/\"git-tag-ci\": \"${TAG:-${SHA}}\"/g" box.json
        working-directory: .vortex/installer

      - name: Build PHAR
        run: composer build
        working-directory: .vortex/installer

      - name: Test PHAR
        run: ./build/installer --no-interaction test || exit 1
        working-directory: .vortex/installer

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vortex-installer
          path: .vortex/installer/build/installer
          if-no-files-found: error

  vortex-release-docs:
    needs: vortex-release-installer

    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    defaults:
      run:
        working-directory: .vortex/docs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2

      - name: Download installer
        uses: actions/download-artifact@v4
        with:
          name: vortex-installer
          path: .vortex/docs/

      - name: Copy installer to docs
        run: |
          cp ./installer ./static/install
          chmod +x ./static/install
          php ./static/install --version

      - name: Check docs up-to-date
        run: |
          composer --working-dir=.utils install
          npm run update-variables
          git diff --quiet HEAD || { echo "Docs not up-to-date. Run 'cd .vortex && ahoy update-docs' and commit changes."; git diff; exit 1; }

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build documentation site
        run: yarn run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload documentation site
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vortex/docs/build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
